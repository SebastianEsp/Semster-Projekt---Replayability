<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>fighter_stand_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>player_par</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID;
ID = id;

hp = 120;
maxHp = 120;
//Til bevægelse
//Til hop
jumps = 1; //mængden af hop
maxJumps = 1; //Max mængde af hop
canJump = true; //Til hop
//Til general bevægelse
canMove = true; //Checker om spilleren kan bevæge sig
acceleration = 1; //placeholder
groundacc = 1; //acceleration på jorden
airacc = 0.2 //accleleration i luften
deacceleration = 0.75; //bruges ikke mate haha kek lmao trololo
maxhspeed = 4; //maimale horisontale fart
airborne = true; //er i luften

//Snare, stun and debuff effects
snared = false;
stunned = false;
marked = false;
captor = noone;

//Rage gør, at man ikke "flyver", når man bliver ramt
rage = false;

//Til slag
canhit = true; //kan slå normalt. Er timet.
ishitting = false; //checker om spiller slår
hit_dir = "right"; //retning, der slåes i
hitpower = 3; //kraften på slag
hitpower_lim = 20;

//Til abilities
canCast = true;
canLeap = true; //Can leap. Er timet.
leapCharge = false;
isLeaping = false; //Checker om spiller leaper
leapHit = false; //Checker om spiller leap hitter
leapAfter = false; //Checker om player lige har lavet leap attack
canShatter = true; //Can bruge ability 1. Er timet.
shatterSpawntime = 1;
shatterX = x;
shatterY = y;
shatterXchange = 0;
shatterCurrent = 0;
shatterNumber = 50;
shatterDir = "right";
canUltimate = true;
empowered = false;

//Set controls
if(player1_obj.chosenCharacter == "fighter")
{
    Right = "D";
    Left = "A";
    Up = "W";
    A1 = "H";
    A2 = "J";
    A3 = "K";
    A4 = "Y";
}

if(player2_obj.chosenCharacter == "fighter")
{
    keyboard_set_map(vk_right, ord("U"));
    keyboard_set_map(vk_left, ord("I"));
    keyboard_set_map(vk_up, ord("O"));
    keyboard_set_map(vk_numpad4, ord("P"));
    keyboard_set_map(vk_numpad5, ord("B"));
    keyboard_set_map(vk_numpad6, ord("T"));
    keyboard_set_map(vk_numpad7, ord("N"));
    Right = "U";
    Left = "I";
    Up = "O";
    A1 = "P";
    A2 = "B";
    A3 = "T";
    A4 = "N";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Shatter cooldown</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canShatter = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Shatter movement</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID;
ID = id;
if shatterCurrent &lt; shatterNumber and !place_free(shatterX,shatterY+16) and place_free(shatterX+shatterXchange,shatterY)
{
    with instance_create(shatterX, shatterY+16, hitbox_shatter_fighter_obj)
    {
        owner = ID;
        if ID.shatterDir = "right"
        {
        hitbox_shatter_fighter_obj.dir = "right"
        }
        if ID.shatterDir = "left"
        {
        hitbox_shatter_fighter_obj.dir = "left"
        }
    }
    shatterCurrent += 1;    
    shatterX += shatterXchange;
    alarm[8] = shatterSpawntime;
}
else
{
    shatterCurrent = 0;
    shatterX = x;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Leap charging</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>leapCharge = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Hitting animation</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ishitting = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Ultimate cooldown</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canUltimate = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Bevægelse muligt efter leap muligt</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = true;
leapAfter = false;
if empowered = false
{
    rage = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Leap stop og hit</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed=0
isLeaping = false;
leapHit = true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Power hit alarm</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canLeap = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Ultimate length</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>empowered = false;
rage = false;
audio_stop_sound(fighter_ultimate_sound)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Normal hit Alarm</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canhit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bevægelse</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Horisontal styring. Trykkes der på en piletast, skal der acceleres med variablen "acceleration", indtil den når maxhspeed
if keyboard_check(ord(Right)) &amp;&amp; place_free(x+hspeed, y) and canMove = true{
  hspeed = min(hspeed+acceleration, maxhspeed);
  image_xscale = 1;
}

if keyboard_check(ord(Left))  &amp;&amp; place_free(x-hspeed, y)and canMove = true{
  hspeed = max(hspeed-acceleration, -maxhspeed);
  image_xscale = -1;
}

//Stop med at gå til højre/venstre, hvis du møder en væg
//Højre
if !place_free(x+hspeed,y) and hspeed&gt;0{ 
  hspeed = 0;
  canJump = false;
  if vspeed &gt; 0 {
  }
}

//Venstre
if !place_free(x-abs(hspeed),y) and hspeed&lt;0{
  hspeed = 0;
  canJump = false;
  if vspeed &gt; 0 {
  }
}

//hvis man er i luften, skal airborne være true
if vspeed &gt; 0 or vspeed &lt; 0 and place_free(x+1,y) and place_free(x-1,y){
  airborne = true;
}
if !place_free(x+10,y) or !place_free(x-10,y) or !place_free(x,y+1) or !place_free(x,y-1){
  airborne = false;
}

//acceleration og deacceleration. Er airborne true, skal accelerationen være mindre. 
if airborne = true{
  acceleration = airacc;
}
else{
  acceleration = groundacc;
}
//Trykker man på både højre og venstre, eller ingen af dem, skal spilleren bremse indtil han står stille
if (!keyboard_check(ord(Right)) and !keyboard_check(ord(Left))) or (keyboard_check(ord(Right)) and keyboard_check(ord(Left))){
  if airborne = false{
  if hspeed &gt; acceleration{
    hspeed-=acceleration;
    }
  if hspeed &lt; -acceleration{
    hspeed+=acceleration;
    }
  if hspeed &gt;= -acceleration and hspeed &lt;= acceleration{
    hspeed = 0;
  }
  }
}
//Er der jord under spilleren, får han tyngdekraft.
if place_free(x,y+vspeed){
gravity = 0.2;
}
else{
gravity = 0;
}

//Jumping. Trykkes der på hop-knappen, skal spilleren have en vertikal fart, såfrem spilleren har et hop.
if keyboard_check_pressed(ord(Up)) and jumps &gt; 0 &amp;&amp; canJump = true {
vspeed = -9;
jumps -=1;
}
if airborne = true and keyboard_check_pressed(ord(Up))
and jumps &gt; 0{
vspeed = -9;
jumps -=1
}

if snared = true
{
    if instance_exists(captor)
    {
        canMove = false;
        canJump = false;
        hspeed = 0;
        vspeed = 0;
        canCast = false;
    }
    else
    {
        snared = false;
        canCast = true;
        marked = false;
    }
}

if stunned = true &amp;&amp; instance_exists(captor)
    {
    canMove = false;
    canJump = false;
    hspeed = 0;
    vspeed = 0;
    canCast = false
    canHit = false;
    }
    else
    {
    stunned = false;
    }

if hitpower &gt; hitpower_lim
{
    hitpower = hitpower_lim;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>slag</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID;
ID = id;

if keyboard_check(ord(Up)){
  hit_dir = "up";
}
else{
  if hspeed &gt; 0{
    hit_dir = "right";
  }
  if hspeed &lt; 0{
   hit_dir = "left";
  }
}
//Normal hit
if keyboard_check_pressed(ord(A1)) &amp;&amp; canhit = true
{
audio_play_sound(choose(hammer_swing1_sound,hammer_swing2_sound,hammer_swing3_sound),0,0);
audio_sound_gain(hammer_swing1_sound,0.1,1)
audio_sound_gain(hammer_swing2_sound,0.5,1);
audio_sound_gain(hammer_swing3_sound,0.5,1);
//Normal hit up
if hit_dir = "up"{
  with instance_create(x,y-32,hitbox_fighter_obj){
    owner = ID;
    dir = "up";
  }
}
//Normal hit left
if hit_dir = "left"{
  with instance_create(x-32,y,hitbox_fighter_obj){
    owner = ID;
    dir = "left";
  }
}
//Normal hit right
if hit_dir = "right"{
  with instance_create(x+32,y,hitbox_fighter_obj){
    owner = ID;
    dir = "right";
  }
}
//Hit cooldown
canhit = false;
ishitting = true;
alarm[0] = 40;
alarm[6] = 24;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Leap</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(ord(Up)){
  hit_dir = "up";
}
else{
  if hspeed &gt; 0{
    hit_dir = "right";
  }
  if hspeed &lt; 0{
   hit_dir = "left";
  }
}

if keyboard_check_pressed(ord(A2)) &amp;&amp; canLeap = true &amp;&amp; canCast = true
{
audio_play_sound(leaphit_sound,0,0)
rage = true;
canMove = false;
hspeed=0;
vspeed=0;
if hit_dir = "left"{
    dir = "left";
    y-=1;
    fighter.hspeed -=8
    fighter.vspeed -=4
}

if hit_dir = "right"{
    dir = "right";
    fighter.hspeed +=8
    fighter.vspeed -=4
}
//Powerhit cooldown
canLeap = false;
alarm[2] = 120;
//Leap end
alarm[3] = 40;
//Bevægelse efter slag muligt
alarm[4] = 70;
//Checker om spiller er i leap
isLeaping = true;
//Begynder leap charge
alarm[7] = 30;
}
if leapHit = true
{
if hit_dir = "right"
{
if (airborne = false &amp;&amp; vspeed = 0) 
        {
        instance_create(x+56,y, hammersmash_obj)
        repeat (60) {
        instance_create(hammersmash_obj.x+random(40)-random(40),hammersmash_obj.y+random(20)-random(20), hammerHit_leap_obj)
        }
        }
    with instance_create(x+56,y,hitbox_leaphit_fighter_obj){
    owner = ID;

}
}
if hit_dir = "left"
{
    if (airborne = false) 
        {
        instance_create(x-56,y, hammersmash_obj)
        repeat (60) {
        instance_create(hammersmash_obj.x+random(40)-random(40),hammersmash_obj.y+random(20)-random(20), hammerHit_leap_obj)
        }
        }
with instance_create(x-56,y,hitbox_leaphit_fighter_obj){
    owner = ID;
}
}
leapHit = false;
leapCharge = false;
leapAfter = true;
if empowered = false
{
    rage = false;
}
}
if leapHit = true || leapCharge = true || leapAfter = true
{
    canMove = false
}
if leapAfter = true
{  
    hspeed = 0
    canJump = false;
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Earthshatter</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var er lokal variabel der kun virker i pågældende script
var ID;
//Variblen ID henviser til det specifikke objekt, koden kører i.
ID = id;
//Special ability bindes til keypad 6


if keyboard_check_pressed(ord(A3)) &amp;&amp; canShatter = true &amp;&amp; !place_free(x,y+1)
&amp;&amp; canCast = true
{
if hit_dir = "right"
{
    shatterDir = "right";
    shatterXchange = 16;
}
if hit_dir = "left"
{
    shatterDir = "left";
    shatterXchange = -16;
}

shatterX = x;
shatterY = y;
alarm[8] = 1;
canShatter = false;
alarm[9] = 180;
//ishitting = true;
//alarm[6] = 24
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Sprite change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Standing

if (airborne = false &amp;&amp; isLeaping = false &amp;&amp; ishitting = false &amp;&amp; hspeed = 0
|| leapCharge = false &amp;&amp; hspeed = 0 &amp;&amp; isLeaping = false
&amp;&amp; leapAfter = false &amp;&amp; ishitting = false) 
{
    sprite_index = fighter_stand_spr;
}
//Running
if (airborne = false &amp;&amp; isLeaping = false &amp;&amp; ishitting = false &amp;&amp; hspeed !=0
|| leapCharge = false &amp;&amp; hspeed != 0 &amp;&amp; isLeaping = false
&amp;&amp; leapAfter = false &amp;&amp; ishitting = false)
{
    sprite_index = fighter_running_spr;
    image_speed = 0.3
}
//Jumping
if (vspeed &lt; 0 and airborne = true and ishitting = false &amp;&amp; isLeaping = false 
&amp;&amp; leapCharge = false &amp;&amp; leapAfter = false)
{
    sprite_index = fighter_jump_spr;
}
//Falling
if (vspeed &gt; 0 and airborne = true and ishitting = false &amp;&amp; isLeaping = false 
&amp;&amp; leapCharge = false &amp;&amp; leapAfter = false)
{
    sprite_index = fighter_falling_spr;
}
//Hitting
if (ishitting = true)
{
    sprite_index = figther_attack2_spr
    image_speed = 0.5
}

//Leaping
if (vspeed &lt; 0 &amp;&amp; hspeed !=0 &amp;&amp; isLeaping = true &amp;&amp; airborne = true)
{
    sprite_index = fighter_leap_spr;
}   
if isLeaping = true &amp;&amp; leapCharge = true &amp;&amp; leapHit = false
{
    sprite_index = fighter_leapHit_spr;
    image_speed = 0.5
}
if leapAfter = true
{
    sprite_index = fighter_leap_after_spr;
}





</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ded</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp &lt; 0
{
    if player1_obj.chosenCharacter = "fighter"
    {
        global.player2score += 1;
    }
    if player2_obj.chosenCharacter = "fighter"
    {
        global.player1score += 1;
    }
    repeat(100)
    {
        instance_create(x,y,blood_ded_obj);
    }
x = 5000;
hp = 100;
with controller_obj
{
    alarm[0] = 120;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Ultimate Ability</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var er lokal variabel der kun virker i pågældende script
var ID;
//Variblen ID henviser til det specifikke objekt, koden kører i.
ID = id;
//Ultimate ability bindes til keypad 7
//ULTIMATE COOLDOWN: ALARM 5. ULTIMATE LENGTH: ALARM 1
if keyboard_check_pressed(ord(A4)) &amp;&amp; canUltimate = true &amp;&amp; canCast = true{
canUltimate = false
alarm [5] = 7200
empowered = true;
alarm [1] = 600;
instance_create(x,y,fighter_ultra_fire_obj)
audio_play_sound(fighter_ultimate_sound,0,0)
}
if empowered = true
{
    shatterNumber = 100;
    rage = true;
    maxhspeed = 8;
    airacc = 0.7;
    maxJumps = 2;
}
else
{
    shatterNumber = 20;
    maxhspeed = 4;
    airacc = 0.2;
    maxJumps = 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
