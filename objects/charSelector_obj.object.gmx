<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activeElement = 0;
index = 0;
player = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_released(ord('D')) || keyboard_check_released(vk_right))
{
    if(index &lt; 3)
    {
        index++; 
    }
    activeElement = index;
}

if(keyboard_check_released(ord('A')) || keyboard_check_released(vk_left))
{
    if(index &gt; 0)
    {
        index--;   
    }
    activeElement = index;
}

if(player1_obj.chosenCharacter == "mage" &amp;&amp; index == 0)
{
    index = 1;
    activeElement = index;
}
else if(player1_obj.chosenCharacter == "assassin" &amp;&amp; index  == 1)
{
    if(keyboard_check_released(ord("A")) || keyboard_check_released(vk_left))
    {
        index = 0;
        activeElement = index;   
    }
    else if(keyboard_check_released(ord("D")) || keyboard_check_released(vk_right))
    {
        index = 2;
        activeElement = index;   
    }
}
else if(player1_obj.chosenCharacter == "fighter" &amp;&amp; index  == 2)
{
    if(keyboard_check_released(ord("A")) || keyboard_check_released(vk_left))
    {
        index = 1;
        activeElement = index;   
    }
    else if(keyboard_check_released(ord("D")) || keyboard_check_released(vk_right))
    {
        index = 3;
        activeElement = index;   
    }
}
else if(player1_obj.chosenCharacter == "ranger" &amp;&amp; index == 3)
{
    index = 2;
    activeElement = index;
}

if(keyboard_check_released(vk_return) &amp;&amp; player == 1)
{
    switch(index)
    {
        case 0:
            player1_obj.chosenCharacter = "mage";
            player += 1;            
        break;
        case 1:
            player1_obj.chosenCharacter = "assassin";
            player += 1;    
        break;
        case 2:
            player1_obj.chosenCharacter = "fighter";
            player += 1;  
        break;
        case 3:
            player1_obj.chosenCharacter = "ranger";
            player += 1;  
        break;   
    }
}

if(keyboard_check_released(vk_add) &amp;&amp; player == 2)
{
    switch(index)
    {
        case 0:
            player2_obj.chosenCharacter = "mage";
            room_goto(StageSelect);   
        break;
        case 1:
            player2_obj.chosenCharacter = "assassin";
            room_goto(StageSelect);  
        break;
        case 2:
            player2_obj.chosenCharacter = "fighter";
            room_goto(StageSelect); 
        break;
        case 3:
            player2_obj.chosenCharacter = "ranger";
            room_goto(StageSelect);  
        break;   
    }
}

if(index == 0 &amp;&amp; player == 1 || player1_obj.chosenCharacter == "mage")
{
    with abilitiesP1_obj
    {
        image_index = 0;
    } 
}
else if(index == 1 &amp;&amp; player == 1 || player1_obj.chosenCharacter == "assassin")
{
    with abilitiesP1_obj
    {
        image_index = 1;
    } 
}
else if(index == 2 &amp;&amp; player == 1 || player1_obj.chosenCharacter == "fighter")
{
    with abilitiesP1_obj
    {
        image_index = 2;
    } 
}
else if(index == 3 &amp;&amp; player == 1 || player1_obj.chosenCharacter == "ranger")
{
    with abilitiesP1_obj
    {
        image_index = 3;
    } 
}

if(index == 0 &amp;&amp; player == 2)
{
    with abilitiesP2_obj
    {
        image_index = 0;
        visible = true;
    } 
}
else if(index == 1 &amp;&amp; player == 2)
{
    with abilitiesP2_obj
    {
        image_index = 1;
        visible = true;
    } 
}
else if(index == 2 &amp;&amp; player == 2)
{
    with abilitiesP2_obj
    {
        image_index = 2;
        visible = true;
    } 
}
else if(index == 3 &amp;&amp; player == 2)
{
    with abilitiesP2_obj
    {
        image_index = 3;
        visible = true;
    } 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_lime);

if(player = 1)
{
    draw_text_transformed(room_width/2-50, room_height/17, "Player 1", 2, 2, 0);
    draw_text_transformed(room_width/2-225, room_height/11, "Select character with Enter", 2, 2, 0);   
}

if(player = 2)
{
    draw_text_transformed(room_width/2-50, room_height/17, "Player 2", 2, 2, 0);
    draw_text_transformed(room_width/2-250, room_height/11, "Select character with Numpad +", 2, 2, 0);
    draw_text_transformed(768, 672, "P2", 1.5, 1.5, 0);
}

draw_text_transformed(96, 672, "P1", 1.5, 1.5, 0);  

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
