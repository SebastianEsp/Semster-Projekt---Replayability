<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.player1score = 0;
global.player2score = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>maxHp = 100;
maxHitPower = 20;
player1 = player1_obj.chosenCharacter;
player2 = player2_obj.chosenCharacter;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Mage UI</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(player1 == "mage" || player2 == "mage") and (instance_exists(mage))
{
    draw_set_color(c_black)
    hitPower = round(mage.hitpower);
    stringHitPower = string(hitPower);
    draw_text_transformed(mage.x-50, mage.y-52, stringHitPower, 0.9, 0.9, 0);

    hp = (mage.hp / mage.maxHp) * 100;
    draw_healthbar(mage.x-30, mage.y-50, mage.x+30, mage.y-40, hp, c_black, c_red, c_lime, 0, true, true);

    scr_draw_hitPower(mage.hitpower-3, maxHitPower,mage.x-40,mage.y-45,10,20,30,50,300,1,hitPower_bck);
    
    if(player1 == "mage")
    {
        if(mage.canshoot)
        {
            draw_sprite(mage_A1, 0, 300, 720);
        }else
        {
            draw_sprite(mage_A1, 1, 300, 720);
        }
        
        if(mage.canFireball == true)
        {
            draw_sprite(mage_A2, 0, 350, 720);   
        }else
        {
            draw_sprite(mage_A2, 1, 350, 720);
        }
        
        if(mage.canBlink)
        {
            draw_sprite(mage_A3, 0, 400, 720);   
        }else
        {
            draw_sprite(mage_A3, 1, 400, 720);
        }
        
        if(mage.canUltimate)
        {
            draw_sprite(mage_A4, 0, 450, 720);
        }else
        {
            draw_sprite(mage_A4, 1, 450, 720);
        }
        
    }
    
    if(player2 == "mage")
    {
        draw_set_color(c_black)
        hitPower = round(mage.hitpower);
        stringHitPower = string(hitPower);
        draw_text_transformed(mage.x-50, mage.y-52, stringHitPower, 0.9, 0.9, 0);
        
        hp = (mage.hp / mage.maxHp) * 100;
        draw_healthbar(mage.x-30, mage.y-50, mage.x+30, mage.y-40, hp, c_black, c_red, c_lime, 0, true, true);
            
        scr_draw_hitPower(mage.hitpower-3, maxHitPower,mage.x-40,mage.y-45,10,20,30,50,300,1,hitPower_bck);
        
        if(mage.canshoot)
        {
            draw_sprite(mage_A1, 0, 1000, 720);
        }else
        {
            draw_sprite(mage_A1, 1, 1000, 720);
        }
        
        if(mage.canFireball == true)
        {
            draw_sprite(mage_A2, 0, 1050, 720);
        }else
        {
            draw_sprite(mage_A2, 1, 1050, 720);
        }
        
        if(mage.canBlink)
        {
            draw_sprite(mage_A3, 0, 1100, 720);   
        }else
        {
            draw_sprite(mage_A3, 1, 1100, 720);
        }
        
        if(mage.canUltimate)
        {
            draw_sprite(mage_A4, 0, 1150, 720);
        }else
        {
            draw_sprite(mage_A4, 0, 1150, 720);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Fighter UI</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(player1 == "fighter" || player2 == "fighter") and (instance_exists(fighter))
{
    draw_set_color(c_black)
    hitPower = round(fighter.hitpower);
    stringHitPower = string(hitPower);
    draw_text_transformed(fighter.x-50, fighter.y-52, stringHitPower, 0.9, 0.9, 0);

    hp = (fighter.hp / fighter.maxHp) * 100;
    draw_healthbar(fighter.x-30, fighter.y-50, fighter.x+30, fighter.y-40, hp, c_black, c_red, c_lime, 0, true, true);

    scr_draw_hitPower(fighter.hitpower-3, maxHitPower,fighter.x-40,fighter.y-45,10,20,30,50,300,1,hitPower_bck);
    
    if(player1 == "fighter")
    {
        if(fighter.canhit)
        {
            draw_sprite(fighter_A1, 0, 300, 720);
        }else
        {
            draw_sprite(fighter_A1, 1, 300, 720);
        }
        
        if(fighter.canLeap)
        {
            draw_sprite(fighter_A2, 0, 350, 720);  
        }else
        {
            draw_sprite(fighter_A2, 1, 350, 720);
        }
        
        if(fighter.canShatter)
        {
            draw_sprite(fighter_A3, 0, 400, 720);   
        }else
        {
            draw_sprite(fighter_A3, 1, 400, 720);
        }
        
        if(fighter.canUltimate)
        {
            draw_sprite(fighter_A4, 0, 450, 720);
        }else
        {
            draw_sprite(fighter_A4, 1, 450, 720);
        }
    }
    
    if(player2 == "fighter")
    {
        draw_set_color(c_black)
        hitPower = round(fighter.hitpower);
        stringHitPower = string(hitPower);
        draw_text_transformed(fighter.x-50, fighter.y-52, stringHitPower, 0.9, 0.9, 0);

        hp = (fighter.hp / fighter.maxHp) * 100;
        draw_healthbar(fighter.x-30, fighter.y-50, fighter.x+30, fighter.y-40, hp, c_black, c_red, c_lime, 0, true, true);
            
        scr_draw_hitPower(fighter.hitpower-3, maxHitPower,fighter.x-40,fighter.y-45,10,20,30,50,300,1,hitPower_bck);
        
        if(fighter.canhit)
        {
            draw_sprite(fighter_A1, 0, 1000, 720);
        }else
        {
            draw_sprite(fighter_A1, 1, 1000, 720);
        }
        
        if(fighter.canLeap)
        {
            draw_sprite(fighter_A2, 0, 1050, 720);   
        }else
        {
            draw_sprite(fighter_A2, 1, 1050, 720);
        }
        
        if(fighter.canShatter)
        {
            draw_sprite(fighter_A3, 0, 1100, 720);   
        }else
        {
            draw_sprite(fighter_A3, 1, 1100, 720);
        }
        
        if(fighter.canUltimate)
        {
            draw_sprite(fighter_A4, 0, 1150, 720); 
        }else
        {
            draw_sprite(fighter_A4, 1, 1150, 720); 
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Ranger UI</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(player1 == "ranger" || player2 == "ranger") and (instance_exists(ranger))
{
    draw_set_color(c_black)
    hitPower = round(ranger.hitpower);
    stringHitPower = string(hitPower);
    draw_text_transformed(ranger.x-50, ranger.y-52, stringHitPower, 0.9, 0.9, 0);

    hp = (ranger.hp / ranger.maxHp) * 100;
    draw_healthbar(ranger.x-30, ranger.y-50, ranger.x+30, ranger.y-40, hp, c_black, c_red, c_lime, 0, true, true);

    scr_draw_hitPower(ranger.hitpower-3, maxHitPower,ranger.x-40,ranger.y-45,10,20,30,50,300,1,hitPower_bck);
    
    if(player1 == "ranger")
    {
        if(ranger.canShoot)
        {
            draw_sprite(ranger_A1, 0, 300, 720);
        }else
        {
            draw_sprite(ranger_A1, 1, 300, 720);
        }
        
        if(ranger.canjumpShot)
        {
            draw_sprite(ranger_A2, 0, 350, 720);  
        }else
        {
            draw_sprite(ranger_A2, 1, 350, 720);
        }
        
        if(ranger.traps &gt; 0)
        {
            draw_sprite(ranger_A3, 0, 400, 720);   
        }else
        {
            draw_sprite(ranger_A3, 1, 400, 720);
        }
        
        if(ranger.canUltimate)
        {
            draw_sprite(ranger_A4, 0, 450, 720);
        }else
        {
            draw_sprite(ranger_A4, 1, 450, 720);
        }
        
    }
    
    if(player2 == "ranger")
    {
        draw_set_color(c_black)
        hitPower = round(ranger.hitpower);
        stringHitPower = string(hitPower);
        draw_text_transformed(ranger.x-50, ranger.y-52, stringHitPower, 0.9, 0.9, 0);
    
        hp = (ranger.hp / ranger.maxHp) * 100;
        draw_healthbar(ranger.x-30, ranger.y-50, ranger.x+30, ranger.y-40, hp, c_black, c_red, c_lime, 0, true, true);

        scr_draw_hitPower(ranger.hitpower-3, maxHitPower,ranger.x-40,ranger.y-45,10,20,30,50,300,1,hitPower_bck);
                    
        if(ranger.canShoot)
        {
            draw_sprite(ranger_A1, 0, 1000, 720);
        }else
        {
            draw_sprite(ranger_A1, 1, 1000, 720);
        }
        
        if(ranger.canjumpShot)
        {
            draw_sprite(ranger_A2, 0, 1050, 720);   
        }else
        {
            draw_sprite(ranger_A2, 1, 1050, 720);
        }
        
        if(ranger.traps &gt; 0)
        {
            draw_sprite(ranger_A3, 0, 1100, 720);   
        }else
        {
            draw_sprite(ranger_A3, 1, 1100, 720);
        }
        
        if(ranger.canUltimate)
        {
            draw_sprite(ranger_A4, 0, 1150, 720);
        }else
        {
            draw_sprite(ranger_A4, 1, 1150, 720);
        }
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Assassin UI</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(player1 == "assassin" || player2 == "assassin") and (instance_exists(assassin))
{
    draw_set_color(c_black)
    hitPower = round(assassin.hitpower);
    stringHitPower = string(hitPower);
    hp = (assassin.hp / assassin.maxHp) * 100;
    if assassin.visible = true
    {
        draw_text_transformed(assassin.x-50, assassin.y-52, stringHitPower, 0.9, 0.9, 0);
        draw_healthbar(assassin.x-30, assassin.y-50, assassin.x+30, assassin.y-40, hp, c_black, c_red, c_lime, 0, true, true);
        scr_draw_hitPower(assassin.hitpower-3, maxHitPower,assassin.x-40,assassin.y-45,10,20,30,50,300,1,hitPower_bck);
    }
    if(player1 == "assassin")
    {
        if(assassin.canhit)
        {
            draw_sprite(assassin_A1, 0, 300, 720);
        }else
        {
            draw_sprite(assassin_A1, 1, 300, 720);
        }
        
        if(assassin.canPowerHit)
        {
            draw_sprite(assassin_A2, 0, 350, 720);  
        }else
        {
            draw_sprite(assassin_A2, 1, 350, 720);
        }
        
        if(assassin.useAbility1)
        {
            draw_sprite(assassin_A3, 0, 400, 720);   
        }else
        {
            draw_sprite(assassin_A3, 1, 400, 720);
        }
        
        if(assassin.useUltimate)
        {
            draw_sprite(assassin_A4, 0, 450, 720);
        }else
        {
            draw_sprite(assassin_A4, 1, 450, 720);
        }
        
    }
    
    if(player2 == "assassin")
    {
        draw_set_color(c_black)
        hitPower = round(assassin.hitpower);
        stringHitPower = string(hitPower);
        hp = (assassin.hp / assassin.maxHp) * 100;
        if assassin.visible = true
        {
            draw_text_transformed(assassin.x-50, assassin.y-52, stringHitPower, 0.9, 0.9, 0);
            draw_healthbar(assassin.x-30, assassin.y-50, assassin.x+30, assassin.y-40, hp, c_black, c_red, c_lime, 0, true, true);
            scr_draw_hitPower(assassin.hitpower-3, maxHitPower,assassin.x-40,assassin.y-45,10,20,30,50,300,1,hitPower_bck);
        }       
        if(assassin.canhit)
        {
            draw_sprite(assassin_A1, 0, 1000, 720);
        }else
        {
            draw_sprite(assassin_A1, 1, 1000, 720);
        }
        
        if(assassin.canPowerHit)
        {
            draw_sprite(assassin_A2, 0, 1050, 720);   
        }else
        {
            draw_sprite(assassin_A2, 1, 1050, 720);
        }
        
        if(assassin.useAbility1)
        {
            draw_sprite(assassin_A3, 0, 1100, 720);   
        }else
        {
            draw_sprite(assassin_A3, 1, 1100, 720);
        }
        
        if(assassin.useUltimate)
        {
            draw_sprite(assassin_A4, 0, 1150, 720);
        }else
        {
            draw_sprite(assassin_A4, 1, 1150, 720);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(200,750,"Spiller 1: "+string(global.player1score));
draw_text(900,750,"Spiller 2: "+string(global.player2score));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
